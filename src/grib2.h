/*********************************************************************
 * Name:      	main.h
 * Purpose:   	Declares simple wxWidgets application with GUI
 * 				created using wxFormBuilder.
 * Author:
 * Created:
 * Copyright:
 * License:   	wxWidgets license (www.wxwidgets.org)
 *
 * Notes:		Note that all GUI creation code is declared in
 * 				gui.h source file which is generated by wxFormBuilder.
 *********************************************************************/

#ifndef __main__
#define __main__

// main wxWidgets header file
#include <wx/wx.h>
// gui classes generated by wxFormBuilder
#include "../../../include/ocpn_plugin.h"

#include "gui.h"
#include "grib_reader.h"
#include "wx/wfstream.h"

////////////////////////////////////////////////////////////////////////////////
// main application frame declaration
////////////////////////////////////////////////////////////////////////////////
#ifndef PI
#define PI        3.1415926535897931160E0      /* pi */
#endif

struct Selection
{
    wxDouble topLat;
    wxDouble topLon;
    wxDouble bottomLat;
    wxDouble bottomLon;
};

class grib2_pi;

class MainDialog : public GribDialog {
public:
	MainDialog( wxWindow *parent );
	virtual ~MainDialog();
	
	GribReader 	*gribReader;
	
	void SetCursorLatLon(double lat, double lon);
	void setPlugIn(grib2_pi *p);
	
	grib2_pi	*pPlugIn;
	wxWindow	*m_parent;
	Selection	selectionRectangle;
	double		m_cursor_lon, m_cursor_lat;
	
private:
	void UpdateTrackingControls();
	void printWindData();
	void printGustsData();
	void printCurrentData();
	void printWaveData();
	void printPressureData();
	void printTemperatureData();
	void printCloudsData();
	void setSelectionRectangle();	
	void resetSelectionRectangle(bool i);
	
	wxString toBeaufort(wxFloat32 w);
	wxLogWindow *log_window_m;

protected:
	// protected event handlers
	virtual void OnCloseFrame( wxCloseEvent& event );
	virtual void onCloseDialog( wxCloseEvent& event );
	virtual void OnExitClick( wxCommandEvent& event );
	virtual void onFileButtonClick( wxCommandEvent& event );
	virtual void onDirChanged(wxCommandEvent& event);
	virtual void onPageChanged( wxNotebookEvent& event );
	virtual void onTreeSelectionChanged(wxTreeEvent& event);
	virtual void onTreeItemRightClick(wxTreeEvent& event);
	virtual void onDownLoadOK( wxCommandEvent& event );
	virtual void onDWindClick( wxCommandEvent& event );
	virtual void onBmpForceClick( wxCommandEvent& event );
	virtual void onBmpGustsClick( wxCommandEvent& event );
	virtual void onDWaveClick( wxCommandEvent& event ) ;
	virtual void onBmpWaveHeightClick( wxCommandEvent& event );
	virtual void onBmpSwellClick( wxCommandEvent& event );
	virtual void onBmpCloudsClick( wxCommandEvent& event );
	virtual void onDPressureClick( wxCommandEvent& event );
	virtual void onBmpTemperatureClick( wxCommandEvent& event );
	virtual void onDCurrentClick( wxCommandEvent& event );
	virtual void onBmpCurrentForceClick( wxCommandEvent& event );
	virtual void OnCharNoteBook1( wxKeyEvent& event );
	virtual void onButtonSelectionReset( wxCommandEvent& event );
	
	void fillDirTree(wxString dir, bool start, wxTreeItemId id);
	void addChildren(wxTreeItemId id, wxString s);
	wxString createOceanDownloadString(int ft, int h, wxString hrs,int start,wxString *str, wxDateTime dt);	
	wxString createMeteoDownloadString(int ft, int h, wxString hrs,int start,wxString *str, wxDateTime dt);
};

class MyTreeItemData : public wxTreeItemData
{
public:
	MyTreeItemData(wxUint64 fp, wxDateTime *dt, wxUint32 hour, wxString *fileName);
	
	wxString file;
	wxUint64 fp;
	wxUint32 hour;
	wxDateTime dt;
};

#endif //__main__
